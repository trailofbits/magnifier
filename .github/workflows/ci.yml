name: VCPKG Continuous Integration

on:
  # Run this workflow once every 6 hours against the master branch
  #schedule:
  # - cron: "0 */6 * * *"

  push:
    branches:
      - 'master'

    tags:
      - '*'

  pull_request:
    branches:
      - '*'

jobs:
  build_linux:
    strategy:
      fail-fast: false
      matrix:
        image:
          - { name: 'ubuntu', tag: '20.04' }
        llvm: [ '14' ]

    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/lifting-bits/cxx-common/vcpkg-builder-${{ matrix.image.name }}:${{ matrix.image.tag }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Install utility tools
        shell: bash
        run: |
          # TODO some of these should probably live in the Docker build image
          #wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          #echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list
          #echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list
          apt-get update
          apt-get install curl pixz xz-utils
          #apt-get install -y pixz xz-utils make rpm python3.8
          #update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 100

      - name: Build with CMake Presets
        shell: bash
        run: |
          export INSTALL_DIR=${GITHUB_WORKSPACE}/${INSTALL_DIR_PART}
          export VCPKG_ROOT=${GITHUB_WORKSPACE}/${VCPKG_ROOT_PART}
          scripts/fetch-cxx-common.sh
          scripts/build-preset.sh debug
        env:
          INSTALL_DIR_PART: ../magnifier-install
          VCPKG_ROOT_PART: ../downloads/vcpkg_${{ matrix.image.name }}-${{ matrix.image.tag }}_llvm-${{ matrix.llvm }}_amd64

  build_mac:
    strategy:
      fail-fast: false
      matrix:
        os: [
          'macos-11'
          ]
        llvm: [ '13' ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Install utility tools
        shell: bash
        run: |
          brew install coreutils ninja

      - name: Build with CMake Presets
        shell: bash
        run: |
          export INSTALL_DIR=${GITHUB_WORKSPACE}/${INSTALL_DIR_PART}
          export VCPKG_ROOT=${GITHUB_WORKSPACE}/${VCPKG_ROOT_PART}
          scripts/fetch-cxx-common.sh
          scripts/build-preset.sh debug -- -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++)
        env:
          INSTALL_DIR_PART: ../magnifier-install
          VCPKG_ROOT_PART: ../downloads/vcpkg_${{ matrix.os }}_llvm-${{ matrix.llvm }}_xcode-13.0_amd64
